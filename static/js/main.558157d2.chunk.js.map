{"version":3,"sources":["ebconfig.js","settings.js","App.js","reportWebVitals.js","index.js"],"names":["ebconfig","settings","Account","useState","userVal","setUserVal","passVal","setPassVal","useEasybase","signIn","signUp","clearInputs","handleSignInPress","a","success","alert","handleSignUpPress","console","log","created_at","Date","toString","res","View","style","styles","container","Text","title","TextInput","value","onChangeText","e","accountInput","placeholder","secureTextEntry","display","flexDirection","marginTop","Button","onPress","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","height","borderColor","borderWidth","width","margin","fontSize","textAlign","fontWeight","fontStyle","marginBottom","Router","isUserSignedIn","Notes","NewNoteButton","params","Frame","sync","onClick","push","name","userID","startdate","dates","startDate","endDate","location","configureFrame","key","state","setState","disabledDates","useEffect","tableName","limit","noteRootStyle","border","borderRadius","padding","map","ele","enddate","day","setDate","getDate","toLocaleDateString","editableDateInputs","onChange","item","selection","moveRangeOnFirstSelection","ranges","String","slice","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.558157d2.chunk.js","sourcesContent":["/* eslint-disable */\n// WARNING: Do not edit this file\n\n/* eslint-disable */\n// WARNING: Do not edit this file\n\nconst ebconfig = {\n  \"integration\": \"project-booking-bdRhJlbRrBcfVlgSrVdzYrUKfaQsyF0x\",\n  \"version\": \"2020-11-20\"\n}\n\nexport default ebconfig;\n\n\n// const ebconfig = {\n//   \"integration\": \"react-1-2FhV3YGfWptiayGU4zP4PmTrmjhN40aqeVy6w5F2V5SBpIykZODQ1Hv167ImotMs30s4SPGdB-ullIyYlEXtOmNC0K62MZWD-TlxouEdbtb2tpnEAuxO5zZn\",\n//   \"tt\": \"tt-1-Ul7j-tb933h-fUNXSJc9ieSAghJvNtufK1eTo-OlSqk=\",\n//   \"version\": \"2020-11-20\"\n// }\n\n// export default ebconfig;","export const settings = {\r\n    passPhrase: \"silfverbokning\"\r\n};","import { EasybaseProvider, useEasybase } from 'easybase-react';\r\nimport React, { Component }  from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport ebconfig from './ebconfig';\r\nimport { StyleSheet, Text, View, TextInput, Button } from 'react-native';\r\nimport { settings } from \"./settings\";\r\n//import DateRangePicker from '@wojtekmaj/react-daterange-picker'\r\n\r\nimport { DateRange } from 'react-date-range';\r\nimport { DateRangePicker } from 'react-date-range';\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport { addDays, format } from 'date-fns';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <EasybaseProvider ebconfig={ebconfig}>\r\n        <Router />\r\n      </EasybaseProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Account() {\r\n  const [userVal, setUserVal] = useState(\"\");\r\n  const [passVal, setPassVal] = useState(\"\");\r\n  const [focus, setFocus] = useState('startDate');\r\n\r\n  const { signIn, signUp } = useEasybase();\r\n\r\n  const clearInputs = () => {\r\n    setUserVal(\"\");\r\n    setPassVal(\"\");\r\n  }\r\n\r\n  const handleSignInPress = async () => {\r\n    const res = await signIn(userVal, passVal);\r\n    if (!res.success)\r\n    {\r\n      alert(\"Kan inte logga in\");\r\n    }\r\n    else\r\n    {\r\n      alert(\"Inloggad?\");\r\n    }\r\n    clearInputs();\r\n  }\r\n\r\n  const handleSignUpPress = async () => {\r\n    console.log(settings.passPhrase);\r\n    if(settings.passPhrase !== passVal)\r\n    {\r\n      alert(\"Fel kod!\");\r\n      return;\r\n    }\r\n    const res = await signUp(userVal, passVal, {\r\n      created_at: new Date().toString\r\n    });\r\n    if (res.success) {\r\n      const res = await signIn(userVal, passVal);\r\n      alert(\"Konto skapat!\");\r\n      if (!res)\r\n      {\r\n        alert(\"Kan inte logga in\");\r\n      }\r\n    }\r\n    else {\r\n      alert(\"Sign-up failed!\");\r\n    }\r\n    clearInputs();\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Välkommen till Silfvers boknings system.</Text>\r\n      <TextInput value={userVal} onChangeText={e => setUserVal(e)} style={styles.accountInput} placeholder=\"Användarnamn\" />\r\n      <TextInput secureTextEntry={true} value={passVal} onChangeText={e => setPassVal(e)} style={styles.accountInput} placeholder=\"Lösenord (ifrån Magnus)\"/>\r\n      <View style={{ display: \"flex\", flexDirection: \"column\", marginTop: 30 }}>\r\n        <Button title=\"Logga in\" onPress={handleSignInPress} />\r\n        <p>&#9432; Skriv in lösenordet ifrån Magnus för att skapa ett konto. Samma lösenord används vid inlogging.</p>\r\n        <Button title=\"Skapa konto\" onPress={handleSignUpPress} />\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  accountInput: {\r\n    height: 40,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    width: \"75%\",\r\n    margin: 10,\r\n    fontSize: 22,\r\n    textAlign: \"center\"\r\n  },\r\n  title: {\r\n    fontSize: 30,\r\n    fontWeight: \"500\",\r\n    fontStyle: \"italic\",\r\n    marginBottom: 30\r\n  }\r\n});\r\n\r\nfunction Router() {\r\n  const { isUserSignedIn } = useEasybase();\r\n\r\n  console.log(\"logged in?: \" + isUserSignedIn());\r\n  //console.log(\"name: \" + userID());\r\n  return (\r\n      isUserSignedIn() ? <Notes /> : <Account />\r\n  );\r\n}\r\n\r\nfunction customDayContent(day) {\r\n  return (\r\n    <div>\r\n      <span>{format(day, \"d\")}</span>\r\n      <span class=\"tooltiptext\">Tooltip text</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction NewNoteButton(params) {\r\n\r\n  const { Frame, sync } = useEasybase();\r\n\r\n  const buttonStyle = {\r\n  }\r\n\r\n  const handleClick = () => {\r\n    \r\n    Frame().push({\r\n      name: params.userID,\r\n      startdate: params.dates[0].startDate,\r\n      endDate: params.dates[0].endDate,\r\n      location:0,      \r\n    })\r\n    \r\n    sync();\r\n  }\r\n\r\n  return <button style={buttonStyle} onClick={handleClick}>Boka</button>\r\n}\r\n\r\nfunction Notes() {\r\n  const { Frame, sync, configureFrame } = useEasybase();\r\n  const { userID } = useEasybase();\r\n  const [value, onChange] = useState([new Date(), new Date()]);\r\n  const [focus, setFocus] = useState('startDate');\r\n\r\n  const [state, setState] = useState([\r\n    {\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      key: 'selection'\r\n    }\r\n  ]);\r\n\r\n  var disabledDates = [];\r\n\r\n  const selectionRange = {\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n    key: 'selection',\r\n  }\r\n\r\n  useEffect(() => {\r\n    configureFrame({ tableName: \"BOOKING\", limit: 10 });\r\n    sync();\r\n  }, []);\r\n\r\n  const noteRootStyle = {\r\n    border: \"2px #0af solid\",\r\n    borderRadius: 9,\r\n    margin: 20,\r\n    backgroundColor: \"#efefef\",\r\n    padding: 6\r\n  };\r\n\r\n \r\n  Frame().map(function(ele) {\r\n    var startDate = new Date(ele.startdate);\r\n    var endDate = new Date(ele.enddate);\r\n    for (var day = startDate; day <= endDate; day.setDate(day.getDate() + 1)) {\r\n      console.log(day.toLocaleDateString());\r\n      disabledDates.push(new Date(day.toLocaleDateString()));\r\n   }\r\n  }\r\n  );\r\n\r\n  return (\r\n      <div>\r\n        <DateRange\r\n          editableDateInputs={true}\r\n          onChange={item => setState([item.selection])}\r\n          moveRangeOnFirstSelection={false}\r\n          ranges={state}\r\n          disabledDates={disabledDates}\r\n          // dayContentRenderer={customDayContent}\r\n        />       \r\n      <div style={{ width: 400 }}>\r\n      <NewNoteButton dates={state} userID={userID()} />\r\n        {Frame().map(ele => \r\n          <div style={noteRootStyle}>\r\n            <h3>{ele.name}</h3>\r\n            {/* <p>{ele.location}</p> */}\r\n            <View style={{ display: \"flex\", flexDirection: \"column\", marginTop: 30 }}>\r\n            <small>{String(new Date(ele.startdate).toLocaleDateString()).slice(0, 10)}</small>\r\n            <small>{String(new Date(ele.enddate).toLocaleDateString()).slice(0, 10)}</small>\r\n            </View>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}